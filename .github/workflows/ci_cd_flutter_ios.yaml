name: Flutter iOS CI/CD_

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest
    # runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.6'

      - name: Install dependencies
        run: flutter pub get

      # - name: Install the Apple certificate and provisioning profile
      #   env:
      #     BUILD_CERTIFICATE_BASE64: ${{ secrets.BASE64_CERTIFICATE_DISTRIBUTION }}
      #     DEV_CERT_BASE64: ${{ secrets.BASE64_CERTIFICATE_DEVELOPER }}
      #     P12_PASSWORD: ${{ secrets.PASSWORD_CERTIFICATE_DISTRIBUTION }}
      #     BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BASE64_PP_CICDTESTAPP }}
      #     KEYCHAIN_PASSWORD: ${{ secrets.PASSWORD_KEYCHAIN }}
      #   run: |
      #     # create variables
      #     CERTIFICATE_PATH=$RUNNER_TEMP/dis_build_certificate.p12
      #     DEV_CERTIFICATE_PATH=$RUNNER_TEMP/dev_build_certificate.p12
      #     PP_PATH=$RUNNER_TEMP/cicdtestapp_pp.mobileprovision
      #     KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
      #     # import certificate and provisioning profile from secrets
      #     echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
      #     echo -n "$DEV_CERT_BASE64" | base64 --decode -o $DEV_CERTIFICATE_PATH
      #     echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
      #     ls -l $RUNNER_TEMP
      #     # create temporary keychain
      #     security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
      #     security set-keychain-settings -lt 21600 $KEYCHAIN_PATH
      #     security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
      #     # import certificate to keychain
      #     security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
      #     security import $DEV_CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
      #     security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
      #     security list-keychain -d user -s $KEYCHAIN_PATH
      #     # apply provisioning profile
      #     mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
      #     cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      #     cd ~/Library/MobileDevice/Provisioning\ Profiles
      #     ls -l

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BASE64_CERTIFICATE_DISTRIBUTION }}
          DEV_CERT_BASE64: ${{ secrets.BASE64_CERTIFICATE_DEVELOPER }}
          P12_PASSWORD: ${{ secrets.PASSWORD_CERTIFICATE_DISTRIBUTION }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BASE64_PP_CICDTESTAPP }}
          KEYCHAIN_PASSWORD: ${{ secrets.PASSWORD_KEYCHAIN }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/dis_build_certificate.p12
          DEV_CERTIFICATE_PATH=$RUNNER_TEMP/dev_build_certificate.p12
          PP_PATH=$RUNNER_TEMP/83c8f6ba-160b-4417-b163-f8fe0c3226a8.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
    
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$DEV_CERT_BASE64" | base64 --decode -o $DEV_CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
    
          # verify files
          ls -l $RUNNER_TEMP
    
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
    
          # import certificates to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import $DEV_CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
    
          # set key partition list to avoid access prompts
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
    
          # add the keychain to the list
          security list-keychain -d user -s $KEYCHAIN_PATH
    
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles/
    
          # verify provisioning profile
          ls -l ~/Library/MobileDevice/Provisioning\ Profiles/

          

      # - name: Flutter Build IPA
      #   run: |
      #     security find-identity -p codesigning
      #     xcodebuild -version
      #     flutter build ipa --release --export-options-plist ios/Runner/ExportOptions.plist
        
      - name: Export Archive
        run: |
          security find-identity -p codesigning

          xcodebuild -version
        
          # security unlock-keychain -p abcd@1234 login.keychain
          # xcodebuild -workspace ios/Runner.xcworkspace \
          #            -scheme Runner \
          #            -sdk iphoneos \
          #            -configuration Release \
          #            archive \
          #            -archivePath $PWD/build/Runner.xcarchive \
          #            PROVISIONING_PROFILE_SPECIFIER="cicdtestapp_pp" \
          #            CODE_SIGN_STYLE="Manual" \
          #            -allowProvisioningUpdates

          # xcodebuild -workspace ios/Runner.xcworkspace \
          #  -scheme Runner \
          #  -sdk iphoneos \
          #  -configuration Release \
          #  archive \
          #  -archivePath $PWD/build/Runner.xcarchive \
          #  CODE_SIGN_STYLE="Automatic" \
          #  DEVELOPMENT_TEAM="LQ6RFS97ZY" \
          #  PRODUCT_BUNDLE_IDENTIFIER="com.scientificgames.cicdtestapp" \
          #  -allowProvisioningUpdates
           # PROVISIONING_PROFILE_SPECIFIER="83c8f6ba-160b-4417-b163-f8fe0c3226a8" \
           # SWIFT_VERSION="5.0"
           
           xcodebuild -workspace ios/Runner.xcworkspace \
             -scheme Runner \
             -sdk iphoneos \
             -configuration Release \
             archive \
             -archivePath $PWD/build/Runner.xcarchive \
             CODE_SIGN_STYLE="Manual" \
             DEVELOPMENT_TEAM="LQ6RFS97ZY" \
             PRODUCT_BUNDLE_IDENTIFIER="com.scientificgames.cicdtestapp" \
             PROVISIONING_PROFILE_SPECIFIER="83c8f6ba-160b-4417-b163-f8fe0c3226a8" \
             -allowProvisioningUpdates


                     
      - name: Export IPA
        run: |
          xcodebuild -exportArchive -archivePath $PWD/build/Runner.xcarchive \
                     -exportOptionsPlist ios/Runner/ExportOptions.plist \
                     -exportPath $PWD/build/ios_release

      - name: Upload IPA
        run: |
          pwd
          xcrun altool --upload-app \
          -f ./build/ios_release/ios_xcode_test.ipa \
          -t ios \
          --apiKey 53CY77L5AS \
          --apiIssuer 69a6de70-a739-47e3-e053-5b8c7c11a4d1
